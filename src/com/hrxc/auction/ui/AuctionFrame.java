package com.hrxc.auction.ui;

import com.hrxc.auction.AuctionMain;
import com.hrxc.auction.util.TreeMenuConfig;
import com.hrxc.auction.util.TreeMenuObject;
import java.awt.Toolkit;
import javax.swing.tree.DefaultMutableTreeNode;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.jdesktop.swingx.JXLabel;

/**
 *
 * @author user
 */
public class AuctionFrame extends javax.swing.JFrame {

    private static final Logger log = Logger.getLogger(AuctionFrame.class);

    /**
     * Creates new form AuctionFrame
     */
    public AuctionFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        logStateBton = new org.jdesktop.swingx.JXButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        leftPanel = new javax.swing.JScrollPane();
        menuTree = new org.jdesktop.swingx.JXTree();
        rightPanel = new javax.swing.JScrollPane();
        userInfoLabel = new org.jdesktop.swingx.JXLabel();
        logoutBton = new org.jdesktop.swingx.JXButton();
        modifyPasswordBton = new org.jdesktop.swingx.JXButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("华软信诚拍卖系统V1.1");
        setIconImage(Toolkit.getDefaultToolkit().createImage(getClass().getResource("/app01.png")));
        setName("auctionFrame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1024, 600));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        logStateBton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/print.png"))); // NOI18N
        logStateBton.setText("关闭日志");
        logStateBton.setFocusable(false);
        logStateBton.setFont(new java.awt.Font("黑体", 0, 12)); // NOI18N
        logStateBton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        logStateBton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        logStateBton.setMaximumSize(new java.awt.Dimension(100, 63));
        logStateBton.setMinimumSize(new java.awt.Dimension(100, 63));
        logStateBton.setPreferredSize(new java.awt.Dimension(100, 63));
        logStateBton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logStateBtonActionPerformed(evt);
            }
        });
        jToolBar1.add(logStateBton);

        menuTree.setModel(TreeMenuConfig.generateTreeMenu());
        menuTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                menuTreeValueChanged(evt);
            }
        });
        leftPanel.setViewportView(menuTree);

        jSplitPane1.setLeftComponent(leftPanel);
        jSplitPane1.setRightComponent(rightPanel);

        userInfoLabel.setFont(new java.awt.Font("黑体", 0, 14)); // NOI18N

        logoutBton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app-exit.png"))); // NOI18N
        logoutBton.setText("退出");
        logoutBton.setFont(new java.awt.Font("黑体", 0, 12)); // NOI18N
        logoutBton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtonActionPerformed(evt);
            }
        });

        modifyPasswordBton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/modify_password.png"))); // NOI18N
        modifyPasswordBton.setText("修改密码");
        modifyPasswordBton.setFont(new java.awt.Font("黑体", 0, 12)); // NOI18N
        modifyPasswordBton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyPasswordBtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modifyPasswordBton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logoutBton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(logoutBton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(modifyPasswordBton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(userInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_menuTreeValueChanged
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) evt.getPath().getLastPathComponent();
        TreeMenuObject menu = (TreeMenuObject) node.getUserObject();
        if (menu.getTreeName().equals(TreeMenuConfig.MenuName.M_00_01)) {
            rightPanel.setViewportView(new ProjectInfoPanel());
        } else if (menu.getTreeName().equals(TreeMenuConfig.MenuName.M_00_02)) {
            rightPanel.setViewportView(new ClientSidePanel());
        } else if (menu.getTreeName().equals(TreeMenuConfig.MenuName.M_09_00_01)) {
            rightPanel.setViewportView(new GoodsListPanel(menu.getProjectNo()));
        } else if (menu.getTreeName().equals(TreeMenuConfig.MenuName.M_09_00_02)) {
            rightPanel.setViewportView(new BiddingPaddlePanel(menu.getProjectNo()));
        } else if (menu.getTreeName().equals(TreeMenuConfig.MenuName.M_09_00_03)) {
            rightPanel.setViewportView(new BargainRecordPanel(menu.getProjectNo()));
        } else if (menu.getTreeName().equals(TreeMenuConfig.MenuName.M_09_00_04)) {
            rightPanel.setViewportView(new BargainRecordSettlePanel(menu.getProjectNo()));
        } else if (menu.getTreeName().equals(TreeMenuConfig.MenuName.M_09_00_05)) {
            rightPanel.setViewportView(new SingleProjectStatReportPanel(menu.getProjectNo()));
        }
    }//GEN-LAST:event_menuTreeValueChanged

    private void logoutBtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtonActionPerformed
        this.dispose();
        AuctionMain.toLoginDialog(this);
    }//GEN-LAST:event_logoutBtonActionPerformed

    private void modifyPasswordBtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyPasswordBtonActionPerformed
        //首先进行登陆
        ModifyPasswordDialog dialog = new ModifyPasswordDialog(this, true);
        //居中显示
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    }//GEN-LAST:event_modifyPasswordBtonActionPerformed

    private void logStateBtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logStateBtonActionPerformed
        Level curLevel = Logger.getRootLogger().getLevel();
        if (curLevel.equals(Level.DEBUG)) {
            //将日志关闭并改变按钮状态
            Logger.getRootLogger().setLevel(Level.INFO);
            logStateBton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/printer-error-2.png")));
            logStateBton.setText("开启日志");
            logStateBton.setToolTipText("日志输出已关闭，再次点击可开启！");
        } else if (curLevel.equals(Level.INFO)) {
            //将日志开启并改变按钮状态
            Logger.getRootLogger().setLevel(Level.DEBUG);
            logStateBton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/print.png")));
            logStateBton.setText("关闭日志");
            logStateBton.setToolTipText("日志输出开启，再次点击可关闭！");
        } else {
            log.error("日志状态错误：" + curLevel.toString());
        }

    }//GEN-LAST:event_logStateBtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JScrollPane leftPanel;
    private org.jdesktop.swingx.JXButton logStateBton;
    private org.jdesktop.swingx.JXButton logoutBton;
    private org.jdesktop.swingx.JXTree menuTree;
    private org.jdesktop.swingx.JXButton modifyPasswordBton;
    private javax.swing.JScrollPane rightPanel;
    private org.jdesktop.swingx.JXLabel userInfoLabel;
    // End of variables declaration//GEN-END:variables

    public JXLabel getUserInfoLabel() {
        return userInfoLabel;
    }

    /**
     * 重新加载系统菜单
     */
    public void reLoadMenuTree() {
        menuTree.setModel(TreeMenuConfig.generateTreeMenu());
    }
}
